// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator joi {
  provider = "prisma-joi-generator"
  output   = "./joi"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "erd.png"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  Driver
  Rider
  Admin
}

enum Color {
  White
  Black
  Gray
  Silver
  Blue
  Red
  Brown
  Green
  Orange
  Beige
  Purple
  Gold
  Yellow
}

enum Status {
  Cancelled
  Pending
  Granted
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  username  String
  userId    String    @unique
  email     String    @unique
  password  String
  phone     String
  avatar    String    @default("https://res.cloudinary.com/dgbwenfdp/image/upload/v1690394441/thumbnail_eglf9a.jpg")
  role      Role      @default(User)
  createAt  DateTime  @default(now())
  request   Request[] @relation("User")
  requestD  Request[] @relation("Driver")
  requestR  Request[] @relation("Rider")
  message   Message[]
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  messageId String   @unique
  title     String
  content   String
  sender    String
  isRead    Boolean  @default(false)
  date      DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
}

model Request {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  plate_num String
  brand     String
  vin       String
  color     Color
  location  String
  info      String?
  isRead    Boolean  @default(false)
  status    Status   @default(Pending)
  date      DateTime @default(now())
  user      User     @relation("User", fields: [userId], references: [id])
  driver    User?    @relation("Driver", fields: [driverId], references: [id])
  rider     User?    @relation("Rider", fields: [riderId], references: [id])
  userId    String   @db.ObjectId
  driverId  String?  @db.ObjectId
  riderId   String?  @db.ObjectId
}
